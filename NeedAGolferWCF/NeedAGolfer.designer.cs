#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeedAGolferWCF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NeedAGolfer")]
	public partial class NeedAGolferDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGolfCourse_Event_ApprovedGolfer(GolfCourse_Event_ApprovedGolfer instance);
    partial void UpdateGolfCourse_Event_ApprovedGolfer(GolfCourse_Event_ApprovedGolfer instance);
    partial void DeleteGolfCourse_Event_ApprovedGolfer(GolfCourse_Event_ApprovedGolfer instance);
    partial void InsertGolfCourse_GroupEvent(GolfCourse_GroupEvent instance);
    partial void UpdateGolfCourse_GroupEvent(GolfCourse_GroupEvent instance);
    partial void DeleteGolfCourse_GroupEvent(GolfCourse_GroupEvent instance);
    partial void InsertGolfCourse_OpenTeeTime(GolfCourse_OpenTeeTime instance);
    partial void UpdateGolfCourse_OpenTeeTime(GolfCourse_OpenTeeTime instance);
    partial void DeleteGolfCourse_OpenTeeTime(GolfCourse_OpenTeeTime instance);
    partial void InsertGolferPrivateMessage(GolferPrivateMessage instance);
    partial void UpdateGolferPrivateMessage(GolferPrivateMessage instance);
    partial void DeleteGolferPrivateMessage(GolferPrivateMessage instance);
    partial void InsertGolferStatusMessage(GolferStatusMessage instance);
    partial void UpdateGolferStatusMessage(GolferStatusMessage instance);
    partial void DeleteGolferStatusMessage(GolferStatusMessage instance);
    partial void InsertGolfer(Golfer instance);
    partial void UpdateGolfer(Golfer instance);
    partial void DeleteGolfer(Golfer instance);
    partial void InsertGolferRating(GolferRating instance);
    partial void UpdateGolferRating(GolferRating instance);
    partial void DeleteGolferRating(GolferRating instance);
    partial void InsertLogging(Logging instance);
    partial void UpdateLogging(Logging instance);
    partial void DeleteLogging(Logging instance);
    partial void InsertGolfCourse(GolfCourse instance);
    partial void UpdateGolfCourse(GolfCourse instance);
    partial void DeleteGolfCourse(GolfCourse instance);
    #endregion
		
		public NeedAGolferDataContext() : 
				base("Server=HAZEL.arvixe.com;Database=NeedAGolfer;Uid=xerxes78;Password=coltsrule;", mappingSource)
		{
			OnCreated();
		}
		
		public NeedAGolferDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NeedAGolferDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NeedAGolferDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NeedAGolferDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GolferStatusMessages_View> GolferStatusMessages_Views
		{
			get
			{
				return this.GetTable<GolferStatusMessages_View>();
			}
		}
		
		public System.Data.Linq.Table<GolfCourse_DiscountType> GolfCourse_DiscountTypes
		{
			get
			{
				return this.GetTable<GolfCourse_DiscountType>();
			}
		}
		
		public System.Data.Linq.Table<GolfCourse_Event_ApprovedGolfer> GolfCourse_Event_ApprovedGolfers
		{
			get
			{
				return this.GetTable<GolfCourse_Event_ApprovedGolfer>();
			}
		}
		
		public System.Data.Linq.Table<GolfCourse_GroupEvent> GolfCourse_GroupEvents
		{
			get
			{
				return this.GetTable<GolfCourse_GroupEvent>();
			}
		}
		
		public System.Data.Linq.Table<GolfCourse_OpenTeeTime> GolfCourse_OpenTeeTimes
		{
			get
			{
				return this.GetTable<GolfCourse_OpenTeeTime>();
			}
		}
		
		public System.Data.Linq.Table<GolferPrivateMessage> GolferPrivateMessages
		{
			get
			{
				return this.GetTable<GolferPrivateMessage>();
			}
		}
		
		public System.Data.Linq.Table<GolferStatusMessage> GolferStatusMessages
		{
			get
			{
				return this.GetTable<GolferStatusMessage>();
			}
		}
		
		public System.Data.Linq.Table<Golfer> Golfers
		{
			get
			{
				return this.GetTable<Golfer>();
			}
		}
		
		public System.Data.Linq.Table<GolferRating> GolferRatings
		{
			get
			{
				return this.GetTable<GolferRating>();
			}
		}
		
		public System.Data.Linq.Table<GolferRatings_View> GolferRatings_Views
		{
			get
			{
				return this.GetTable<GolferRatings_View>();
			}
		}
		
		public System.Data.Linq.Table<Logging> Loggings
		{
			get
			{
				return this.GetTable<Logging>();
			}
		}
		
		public System.Data.Linq.Table<GolferPrivateMessages_View> GolferPrivateMessages_Views
		{
			get
			{
				return this.GetTable<GolferPrivateMessages_View>();
			}
		}
		
		public System.Data.Linq.Table<GolfCourse> GolfCourses
		{
			get
			{
				return this.GetTable<GolfCourse>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNearbyGolfers")]
		public ISingleResult<GolferStatusMessages_View> GetNearbyGolfers([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,6)")] System.Nullable<decimal> latitude, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,6)")] System.Nullable<decimal> longitude, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,6)")] System.Nullable<decimal> radius)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), latitude, longitude, radius);
			return ((ISingleResult<GolferStatusMessages_View>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNearbyGolfCourses")]
		public ISingleResult<GetNearbyGolfCoursesResult> GetNearbyGolfCourses([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,6)")] System.Nullable<decimal> latitude, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,6)")] System.Nullable<decimal> longitude, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,6)")] System.Nullable<decimal> radius)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), latitude, longitude, radius);
			return ((ISingleResult<GetNearbyGolfCoursesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolferStatusMessages_View")]
	public partial class GolferStatusMessages_View
	{
		
		private int _GolferId;
		
		private string _EmailAddress;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _Handicap;
		
		private System.Nullable<bool> _IsAvailable;
		
		private System.Nullable<bool> _AllowEmails;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _ScreenName;
		
		private string _Password;
		
		private System.Nullable<int> _AvailabilityDistance;
		
		private bool _IsCourseUser;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _MessageCreateDate;
		
		private System.Nullable<decimal> _Rating;
		
		private System.Nullable<int> _NumRatings;
		
		private string _CourseName;
		
		public GolferStatusMessages_View()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferId", DbType="Int NOT NULL")]
		public int GolferId
		{
			get
			{
				return this._GolferId;
			}
			set
			{
				if ((this._GolferId != value))
				{
					this._GolferId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(250)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(25)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handicap", DbType="Int")]
		public System.Nullable<int> Handicap
		{
			get
			{
				return this._Handicap;
			}
			set
			{
				if ((this._Handicap != value))
				{
					this._Handicap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit")]
		public System.Nullable<bool> IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEmails", DbType="Bit")]
		public System.Nullable<bool> AllowEmails
		{
			get
			{
				return this._AllowEmails;
			}
			set
			{
				if ((this._AllowEmails != value))
				{
					this._AllowEmails = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenName", DbType="VarChar(255)")]
		public string ScreenName
		{
			get
			{
				return this._ScreenName;
			}
			set
			{
				if ((this._ScreenName != value))
				{
					this._ScreenName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailabilityDistance", DbType="Int")]
		public System.Nullable<int> AvailabilityDistance
		{
			get
			{
				return this._AvailabilityDistance;
			}
			set
			{
				if ((this._AvailabilityDistance != value))
				{
					this._AvailabilityDistance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCourseUser", DbType="Bit NOT NULL")]
		public bool IsCourseUser
		{
			get
			{
				return this._IsCourseUser;
			}
			set
			{
				if ((this._IsCourseUser != value))
				{
					this._IsCourseUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MessageCreateDate
		{
			get
			{
				return this._MessageCreateDate;
			}
			set
			{
				if ((this._MessageCreateDate != value))
				{
					this._MessageCreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this._Rating = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumRatings", DbType="Int")]
		public System.Nullable<int> NumRatings
		{
			get
			{
				return this._NumRatings;
			}
			set
			{
				if ((this._NumRatings != value))
				{
					this._NumRatings = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(250)")]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this._CourseName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolfCourse_DiscountType")]
	public partial class GolfCourse_DiscountType
	{
		
		private int _GolfCourse_DiscountType_Id;
		
		private string _GolfCourse_DiscountTypeName;
		
		public GolfCourse_DiscountType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_DiscountType_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int GolfCourse_DiscountType_Id
		{
			get
			{
				return this._GolfCourse_DiscountType_Id;
			}
			set
			{
				if ((this._GolfCourse_DiscountType_Id != value))
				{
					this._GolfCourse_DiscountType_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_DiscountTypeName", DbType="VarChar(10)")]
		public string GolfCourse_DiscountTypeName
		{
			get
			{
				return this._GolfCourse_DiscountTypeName;
			}
			set
			{
				if ((this._GolfCourse_DiscountTypeName != value))
				{
					this._GolfCourse_DiscountTypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolfCourse_Event_ApprovedGolfer")]
	public partial class GolfCourse_Event_ApprovedGolfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GolfCourse_Event_ApprovedGolfer_Id;
		
		private System.Nullable<int> _GolfCourse_EventId;
		
		private System.Nullable<int> _GolferId;
		
		private System.Nullable<bool> _Accepted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGolfCourse_Event_ApprovedGolfer_IdChanging(int value);
    partial void OnGolfCourse_Event_ApprovedGolfer_IdChanged();
    partial void OnGolfCourse_EventIdChanging(System.Nullable<int> value);
    partial void OnGolfCourse_EventIdChanged();
    partial void OnGolferIdChanging(System.Nullable<int> value);
    partial void OnGolferIdChanged();
    partial void OnAcceptedChanging(System.Nullable<bool> value);
    partial void OnAcceptedChanged();
    #endregion
		
		public GolfCourse_Event_ApprovedGolfer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_Event_ApprovedGolfer_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GolfCourse_Event_ApprovedGolfer_Id
		{
			get
			{
				return this._GolfCourse_Event_ApprovedGolfer_Id;
			}
			set
			{
				if ((this._GolfCourse_Event_ApprovedGolfer_Id != value))
				{
					this.OnGolfCourse_Event_ApprovedGolfer_IdChanging(value);
					this.SendPropertyChanging();
					this._GolfCourse_Event_ApprovedGolfer_Id = value;
					this.SendPropertyChanged("GolfCourse_Event_ApprovedGolfer_Id");
					this.OnGolfCourse_Event_ApprovedGolfer_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_EventId", DbType="Int")]
		public System.Nullable<int> GolfCourse_EventId
		{
			get
			{
				return this._GolfCourse_EventId;
			}
			set
			{
				if ((this._GolfCourse_EventId != value))
				{
					this.OnGolfCourse_EventIdChanging(value);
					this.SendPropertyChanging();
					this._GolfCourse_EventId = value;
					this.SendPropertyChanged("GolfCourse_EventId");
					this.OnGolfCourse_EventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferId", DbType="Int")]
		public System.Nullable<int> GolferId
		{
			get
			{
				return this._GolferId;
			}
			set
			{
				if ((this._GolferId != value))
				{
					this.OnGolferIdChanging(value);
					this.SendPropertyChanging();
					this._GolferId = value;
					this.SendPropertyChanged("GolferId");
					this.OnGolferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accepted", DbType="Bit")]
		public System.Nullable<bool> Accepted
		{
			get
			{
				return this._Accepted;
			}
			set
			{
				if ((this._Accepted != value))
				{
					this.OnAcceptedChanging(value);
					this.SendPropertyChanging();
					this._Accepted = value;
					this.SendPropertyChanged("Accepted");
					this.OnAcceptedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolfCourse_GroupEvent")]
	public partial class GolfCourse_GroupEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GolfCourse_Event_Id;
		
		private System.Nullable<int> _GolfCourseId;
		
		private System.Nullable<int> _Organizer_GolferId;
		
		private System.Nullable<System.DateTime> _EventTime;
		
		private System.Nullable<bool> _IsFulfilled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGolfCourse_Event_IdChanging(int value);
    partial void OnGolfCourse_Event_IdChanged();
    partial void OnGolfCourseIdChanging(System.Nullable<int> value);
    partial void OnGolfCourseIdChanged();
    partial void OnOrganizer_GolferIdChanging(System.Nullable<int> value);
    partial void OnOrganizer_GolferIdChanged();
    partial void OnEventTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEventTimeChanged();
    partial void OnIsFulfilledChanging(System.Nullable<bool> value);
    partial void OnIsFulfilledChanged();
    #endregion
		
		public GolfCourse_GroupEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_Event_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GolfCourse_Event_Id
		{
			get
			{
				return this._GolfCourse_Event_Id;
			}
			set
			{
				if ((this._GolfCourse_Event_Id != value))
				{
					this.OnGolfCourse_Event_IdChanging(value);
					this.SendPropertyChanging();
					this._GolfCourse_Event_Id = value;
					this.SendPropertyChanged("GolfCourse_Event_Id");
					this.OnGolfCourse_Event_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourseId", DbType="Int")]
		public System.Nullable<int> GolfCourseId
		{
			get
			{
				return this._GolfCourseId;
			}
			set
			{
				if ((this._GolfCourseId != value))
				{
					this.OnGolfCourseIdChanging(value);
					this.SendPropertyChanging();
					this._GolfCourseId = value;
					this.SendPropertyChanged("GolfCourseId");
					this.OnGolfCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organizer_GolferId", DbType="Int")]
		public System.Nullable<int> Organizer_GolferId
		{
			get
			{
				return this._Organizer_GolferId;
			}
			set
			{
				if ((this._Organizer_GolferId != value))
				{
					this.OnOrganizer_GolferIdChanging(value);
					this.SendPropertyChanging();
					this._Organizer_GolferId = value;
					this.SendPropertyChanged("Organizer_GolferId");
					this.OnOrganizer_GolferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFulfilled", DbType="Bit")]
		public System.Nullable<bool> IsFulfilled
		{
			get
			{
				return this._IsFulfilled;
			}
			set
			{
				if ((this._IsFulfilled != value))
				{
					this.OnIsFulfilledChanging(value);
					this.SendPropertyChanging();
					this._IsFulfilled = value;
					this.SendPropertyChanged("IsFulfilled");
					this.OnIsFulfilledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolfCourse_OpenTeeTime")]
	public partial class GolfCourse_OpenTeeTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GolfCourse_OpenTeeTime_Id;
		
		private System.Nullable<int> _GolfCourseId;
		
		private System.Nullable<System.DateTime> _TeeTime;
		
		private System.Nullable<int> _GolfCourse_DiscountType_Id;
		
		private System.Nullable<decimal> _DiscountAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGolfCourse_OpenTeeTime_IdChanging(int value);
    partial void OnGolfCourse_OpenTeeTime_IdChanged();
    partial void OnGolfCourseIdChanging(System.Nullable<int> value);
    partial void OnGolfCourseIdChanged();
    partial void OnTeeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTeeTimeChanged();
    partial void OnGolfCourse_DiscountType_IdChanging(System.Nullable<int> value);
    partial void OnGolfCourse_DiscountType_IdChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    #endregion
		
		public GolfCourse_OpenTeeTime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_OpenTeeTime_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GolfCourse_OpenTeeTime_Id
		{
			get
			{
				return this._GolfCourse_OpenTeeTime_Id;
			}
			set
			{
				if ((this._GolfCourse_OpenTeeTime_Id != value))
				{
					this.OnGolfCourse_OpenTeeTime_IdChanging(value);
					this.SendPropertyChanging();
					this._GolfCourse_OpenTeeTime_Id = value;
					this.SendPropertyChanged("GolfCourse_OpenTeeTime_Id");
					this.OnGolfCourse_OpenTeeTime_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourseId", DbType="Int")]
		public System.Nullable<int> GolfCourseId
		{
			get
			{
				return this._GolfCourseId;
			}
			set
			{
				if ((this._GolfCourseId != value))
				{
					this.OnGolfCourseIdChanging(value);
					this.SendPropertyChanging();
					this._GolfCourseId = value;
					this.SendPropertyChanged("GolfCourseId");
					this.OnGolfCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TeeTime
		{
			get
			{
				return this._TeeTime;
			}
			set
			{
				if ((this._TeeTime != value))
				{
					this.OnTeeTimeChanging(value);
					this.SendPropertyChanging();
					this._TeeTime = value;
					this.SendPropertyChanged("TeeTime");
					this.OnTeeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_DiscountType_Id", DbType="Int")]
		public System.Nullable<int> GolfCourse_DiscountType_Id
		{
			get
			{
				return this._GolfCourse_DiscountType_Id;
			}
			set
			{
				if ((this._GolfCourse_DiscountType_Id != value))
				{
					this.OnGolfCourse_DiscountType_IdChanging(value);
					this.SendPropertyChanging();
					this._GolfCourse_DiscountType_Id = value;
					this.SendPropertyChanged("GolfCourse_DiscountType_Id");
					this.OnGolfCourse_DiscountType_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Money")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolferPrivateMessage")]
	public partial class GolferPrivateMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GolferPrivateMessageId;
		
		private int _SendingGolferId;
		
		private int _ReceivingGolferId;
		
		private int _RootGolferMessageId;
		
		private System.Nullable<System.DateTime> _MessageCreateDate;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGolferPrivateMessageIdChanging(int value);
    partial void OnGolferPrivateMessageIdChanged();
    partial void OnSendingGolferIdChanging(int value);
    partial void OnSendingGolferIdChanged();
    partial void OnReceivingGolferIdChanging(int value);
    partial void OnReceivingGolferIdChanged();
    partial void OnRootGolferMessageIdChanging(int value);
    partial void OnRootGolferMessageIdChanged();
    partial void OnMessageCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMessageCreateDateChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public GolferPrivateMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferPrivateMessageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GolferPrivateMessageId
		{
			get
			{
				return this._GolferPrivateMessageId;
			}
			set
			{
				if ((this._GolferPrivateMessageId != value))
				{
					this.OnGolferPrivateMessageIdChanging(value);
					this.SendPropertyChanging();
					this._GolferPrivateMessageId = value;
					this.SendPropertyChanged("GolferPrivateMessageId");
					this.OnGolferPrivateMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingGolferId", DbType="Int NOT NULL")]
		public int SendingGolferId
		{
			get
			{
				return this._SendingGolferId;
			}
			set
			{
				if ((this._SendingGolferId != value))
				{
					this.OnSendingGolferIdChanging(value);
					this.SendPropertyChanging();
					this._SendingGolferId = value;
					this.SendPropertyChanged("SendingGolferId");
					this.OnSendingGolferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingGolferId", DbType="Int NOT NULL")]
		public int ReceivingGolferId
		{
			get
			{
				return this._ReceivingGolferId;
			}
			set
			{
				if ((this._ReceivingGolferId != value))
				{
					this.OnReceivingGolferIdChanging(value);
					this.SendPropertyChanging();
					this._ReceivingGolferId = value;
					this.SendPropertyChanged("ReceivingGolferId");
					this.OnReceivingGolferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootGolferMessageId", DbType="Int NOT NULL")]
		public int RootGolferMessageId
		{
			get
			{
				return this._RootGolferMessageId;
			}
			set
			{
				if ((this._RootGolferMessageId != value))
				{
					this.OnRootGolferMessageIdChanging(value);
					this.SendPropertyChanging();
					this._RootGolferMessageId = value;
					this.SendPropertyChanged("RootGolferMessageId");
					this.OnRootGolferMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MessageCreateDate
		{
			get
			{
				return this._MessageCreateDate;
			}
			set
			{
				if ((this._MessageCreateDate != value))
				{
					this.OnMessageCreateDateChanging(value);
					this.SendPropertyChanging();
					this._MessageCreateDate = value;
					this.SendPropertyChanged("MessageCreateDate");
					this.OnMessageCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolferStatusMessage")]
	public partial class GolferStatusMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GolferMessageId;
		
		private int _GolferId;
		
		private System.Nullable<System.DateTime> _MessageCreateDate;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGolferMessageIdChanging(int value);
    partial void OnGolferMessageIdChanged();
    partial void OnGolferIdChanging(int value);
    partial void OnGolferIdChanged();
    partial void OnMessageCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMessageCreateDateChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public GolferStatusMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferMessageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GolferMessageId
		{
			get
			{
				return this._GolferMessageId;
			}
			set
			{
				if ((this._GolferMessageId != value))
				{
					this.OnGolferMessageIdChanging(value);
					this.SendPropertyChanging();
					this._GolferMessageId = value;
					this.SendPropertyChanged("GolferMessageId");
					this.OnGolferMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferId", DbType="Int NOT NULL")]
		public int GolferId
		{
			get
			{
				return this._GolferId;
			}
			set
			{
				if ((this._GolferId != value))
				{
					this.OnGolferIdChanging(value);
					this.SendPropertyChanging();
					this._GolferId = value;
					this.SendPropertyChanged("GolferId");
					this.OnGolferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MessageCreateDate
		{
			get
			{
				return this._MessageCreateDate;
			}
			set
			{
				if ((this._MessageCreateDate != value))
				{
					this.OnMessageCreateDateChanging(value);
					this.SendPropertyChanging();
					this._MessageCreateDate = value;
					this.SendPropertyChanged("MessageCreateDate");
					this.OnMessageCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Golfer")]
	public partial class Golfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GolferId;
		
		private string _EmailAddress;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _Handicap;
		
		private System.Nullable<bool> _IsAvailable;
		
		private System.Nullable<bool> _AllowEmails;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _ScreenName;
		
		private string _PasswordHash;
		
		private System.Nullable<int> _AvailabilityDistance;
		
		private bool _IsCourseUser;
		
		private System.Nullable<int> _HomeGolfCourseId;
		
		private string _PasswordSalt;
		
		private System.Data.Linq.Binary _timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGolferIdChanging(int value);
    partial void OnGolferIdChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnHandicapChanging(System.Nullable<int> value);
    partial void OnHandicapChanged();
    partial void OnIsAvailableChanging(System.Nullable<bool> value);
    partial void OnIsAvailableChanged();
    partial void OnAllowEmailsChanging(System.Nullable<bool> value);
    partial void OnAllowEmailsChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnScreenNameChanging(string value);
    partial void OnScreenNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnAvailabilityDistanceChanging(System.Nullable<int> value);
    partial void OnAvailabilityDistanceChanged();
    partial void OnIsCourseUserChanging(bool value);
    partial void OnIsCourseUserChanged();
    partial void OnHomeGolfCourseIdChanging(System.Nullable<int> value);
    partial void OnHomeGolfCourseIdChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    #endregion
		
		public Golfer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int GolferId
		{
			get
			{
				return this._GolferId;
			}
			set
			{
				if ((this._GolferId != value))
				{
					this.OnGolferIdChanging(value);
					this.SendPropertyChanging();
					this._GolferId = value;
					this.SendPropertyChanged("GolferId");
					this.OnGolferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handicap", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Handicap
		{
			get
			{
				return this._Handicap;
			}
			set
			{
				if ((this._Handicap != value))
				{
					this.OnHandicapChanging(value);
					this.SendPropertyChanging();
					this._Handicap = value;
					this.SendPropertyChanged("Handicap");
					this.OnHandicapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEmails", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> AllowEmails
		{
			get
			{
				return this._AllowEmails;
			}
			set
			{
				if ((this._AllowEmails != value))
				{
					this.OnAllowEmailsChanging(value);
					this.SendPropertyChanging();
					this._AllowEmails = value;
					this.SendPropertyChanged("AllowEmails");
					this.OnAllowEmailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(9,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(9,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenName", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string ScreenName
		{
			get
			{
				return this._ScreenName;
			}
			set
			{
				if ((this._ScreenName != value))
				{
					this.OnScreenNameChanging(value);
					this.SendPropertyChanging();
					this._ScreenName = value;
					this.SendPropertyChanged("ScreenName");
					this.OnScreenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="VarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailabilityDistance", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AvailabilityDistance
		{
			get
			{
				return this._AvailabilityDistance;
			}
			set
			{
				if ((this._AvailabilityDistance != value))
				{
					this.OnAvailabilityDistanceChanging(value);
					this.SendPropertyChanging();
					this._AvailabilityDistance = value;
					this.SendPropertyChanged("AvailabilityDistance");
					this.OnAvailabilityDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCourseUser", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCourseUser
		{
			get
			{
				return this._IsCourseUser;
			}
			set
			{
				if ((this._IsCourseUser != value))
				{
					this.OnIsCourseUserChanging(value);
					this.SendPropertyChanging();
					this._IsCourseUser = value;
					this.SendPropertyChanged("IsCourseUser");
					this.OnIsCourseUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeGolfCourseId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HomeGolfCourseId
		{
			get
			{
				return this._HomeGolfCourseId;
			}
			set
			{
				if ((this._HomeGolfCourseId != value))
				{
					this.OnHomeGolfCourseIdChanging(value);
					this.SendPropertyChanging();
					this._HomeGolfCourseId = value;
					this.SendPropertyChanged("HomeGolfCourseId");
					this.OnHomeGolfCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolferRatings")]
	public partial class GolferRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GolferRatingId;
		
		private int _GolferId;
		
		private int _SubmittingGolferId;
		
		private int _Rating;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGolferRatingIdChanging(int value);
    partial void OnGolferRatingIdChanged();
    partial void OnGolferIdChanging(int value);
    partial void OnGolferIdChanged();
    partial void OnSubmittingGolferIdChanging(int value);
    partial void OnSubmittingGolferIdChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnCreateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateTimeChanged();
    #endregion
		
		public GolferRating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferRatingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GolferRatingId
		{
			get
			{
				return this._GolferRatingId;
			}
			set
			{
				if ((this._GolferRatingId != value))
				{
					this.OnGolferRatingIdChanging(value);
					this.SendPropertyChanging();
					this._GolferRatingId = value;
					this.SendPropertyChanged("GolferRatingId");
					this.OnGolferRatingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferId", DbType="Int NOT NULL")]
		public int GolferId
		{
			get
			{
				return this._GolferId;
			}
			set
			{
				if ((this._GolferId != value))
				{
					this.OnGolferIdChanging(value);
					this.SendPropertyChanging();
					this._GolferId = value;
					this.SendPropertyChanged("GolferId");
					this.OnGolferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittingGolferId", DbType="Int NOT NULL")]
		public int SubmittingGolferId
		{
			get
			{
				return this._SubmittingGolferId;
			}
			set
			{
				if ((this._SubmittingGolferId != value))
				{
					this.OnSubmittingGolferIdChanging(value);
					this.SendPropertyChanging();
					this._SubmittingGolferId = value;
					this.SendPropertyChanged("SubmittingGolferId");
					this.OnSubmittingGolferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this.OnCreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateDateTime = value;
					this.SendPropertyChanged("CreateDateTime");
					this.OnCreateDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolferRatings_View")]
	public partial class GolferRatings_View
	{
		
		private string _SubmitterName;
		
		private int _GolferId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private int _Rating;
		
		private string _Comments;
		
		public GolferRatings_View()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitterName", DbType="VarChar(255)")]
		public string SubmitterName
		{
			get
			{
				return this._SubmitterName;
			}
			set
			{
				if ((this._SubmitterName != value))
				{
					this._SubmitterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolferId", DbType="Int NOT NULL")]
		public int GolferId
		{
			get
			{
				return this._GolferId;
			}
			set
			{
				if ((this._GolferId != value))
				{
					this._GolferId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this._Rating = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logging")]
	public partial class Logging : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoggingId;
		
		private string _DeviceId;
		
		private string _OSVersion;
		
		private string _UserAccount;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _DeviceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoggingIdChanging(int value);
    partial void OnLoggingIdChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnOSVersionChanging(string value);
    partial void OnOSVersionChanged();
    partial void OnUserAccountChanging(string value);
    partial void OnUserAccountChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDeviceTypeChanging(string value);
    partial void OnDeviceTypeChanged();
    #endregion
		
		public Logging()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoggingId
		{
			get
			{
				return this._LoggingId;
			}
			set
			{
				if ((this._LoggingId != value))
				{
					this.OnLoggingIdChanging(value);
					this.SendPropertyChanging();
					this._LoggingId = value;
					this.SendPropertyChanged("LoggingId");
					this.OnLoggingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="VarChar(250)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSVersion", DbType="VarChar(250)")]
		public string OSVersion
		{
			get
			{
				return this._OSVersion;
			}
			set
			{
				if ((this._OSVersion != value))
				{
					this.OnOSVersionChanging(value);
					this.SendPropertyChanging();
					this._OSVersion = value;
					this.SendPropertyChanged("OSVersion");
					this.OnOSVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccount", DbType="VarChar(250)")]
		public string UserAccount
		{
			get
			{
				return this._UserAccount;
			}
			set
			{
				if ((this._UserAccount != value))
				{
					this.OnUserAccountChanging(value);
					this.SendPropertyChanging();
					this._UserAccount = value;
					this.SendPropertyChanged("UserAccount");
					this.OnUserAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceType", DbType="VarChar(250)")]
		public string DeviceType
		{
			get
			{
				return this._DeviceType;
			}
			set
			{
				if ((this._DeviceType != value))
				{
					this.OnDeviceTypeChanging(value);
					this.SendPropertyChanging();
					this._DeviceType = value;
					this.SendPropertyChanged("DeviceType");
					this.OnDeviceTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolferPrivateMessages_View")]
	public partial class GolferPrivateMessages_View
	{
		
		private int _MessageId;
		
		private string _SenderScreenName;
		
		private int _SenderGolferId;
		
		private string _ReceiverScreenName;
		
		private int _ReceiverGolferId;
		
		private int _RootGolferMessageId;
		
		private System.Nullable<System.DateTime> _MessageCreateDate;
		
		private string _Message;
		
		public GolferPrivateMessages_View()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="Int NOT NULL")]
		public int MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this._MessageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderScreenName", DbType="VarChar(255)")]
		public string SenderScreenName
		{
			get
			{
				return this._SenderScreenName;
			}
			set
			{
				if ((this._SenderScreenName != value))
				{
					this._SenderScreenName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderGolferId", DbType="Int NOT NULL")]
		public int SenderGolferId
		{
			get
			{
				return this._SenderGolferId;
			}
			set
			{
				if ((this._SenderGolferId != value))
				{
					this._SenderGolferId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverScreenName", DbType="VarChar(255)")]
		public string ReceiverScreenName
		{
			get
			{
				return this._ReceiverScreenName;
			}
			set
			{
				if ((this._ReceiverScreenName != value))
				{
					this._ReceiverScreenName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverGolferId", DbType="Int NOT NULL")]
		public int ReceiverGolferId
		{
			get
			{
				return this._ReceiverGolferId;
			}
			set
			{
				if ((this._ReceiverGolferId != value))
				{
					this._ReceiverGolferId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootGolferMessageId", DbType="Int NOT NULL")]
		public int RootGolferMessageId
		{
			get
			{
				return this._RootGolferMessageId;
			}
			set
			{
				if ((this._RootGolferMessageId != value))
				{
					this._RootGolferMessageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MessageCreateDate
		{
			get
			{
				return this._MessageCreateDate;
			}
			set
			{
				if ((this._MessageCreateDate != value))
				{
					this._MessageCreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GolfCourse")]
	public partial class GolfCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GolfCourse_Id;
		
		private string _Category;
		
		private string _CourseName;
		
		private string _CourseType;
		
		private string _Address;
		
		private string _City;
		
		private string _County;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _PhoneNumber;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGolfCourse_IdChanging(int value);
    partial void OnGolfCourse_IdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCourseTypeChanging(string value);
    partial void OnCourseTypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    #endregion
		
		public GolfCourse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GolfCourse_Id
		{
			get
			{
				return this._GolfCourse_Id;
			}
			set
			{
				if ((this._GolfCourse_Id != value))
				{
					this.OnGolfCourse_IdChanging(value);
					this.SendPropertyChanging();
					this._GolfCourse_Id = value;
					this.SendPropertyChanged("GolfCourse_Id");
					this.OnGolfCourse_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(20)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(250)")]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseType", DbType="VarChar(50)")]
		public string CourseType
		{
			get
			{
				return this._CourseType;
			}
			set
			{
				if ((this._CourseType != value))
				{
					this.OnCourseTypeChanging(value);
					this.SendPropertyChanging();
					this._CourseType = value;
					this.SendPropertyChanged("CourseType");
					this.OnCourseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(250)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(250)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(20)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(25)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetNearbyGolfCoursesResult
	{
		
		private int _GolfCourse_Id;
		
		private string _Category;
		
		private string _CourseName;
		
		private string _CourseType;
		
		private string _Address;
		
		private string _City;
		
		private string _County;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _PhoneNumber;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<float> _Distance;
		
		public GetNearbyGolfCoursesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GolfCourse_Id", DbType="Int NOT NULL")]
		public int GolfCourse_Id
		{
			get
			{
				return this._GolfCourse_Id;
			}
			set
			{
				if ((this._GolfCourse_Id != value))
				{
					this._GolfCourse_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(20)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(250)")]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this._CourseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseType", DbType="VarChar(50)")]
		public string CourseType
		{
			get
			{
				return this._CourseType;
			}
			set
			{
				if ((this._CourseType != value))
				{
					this._CourseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(250)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(250)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this._County = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(20)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(25)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Real")]
		public System.Nullable<float> Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this._Distance = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
